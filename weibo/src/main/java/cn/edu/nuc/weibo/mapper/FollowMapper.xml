<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nuc.weibo.dao.interfaces.FollowMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nuc.weibo.entity.Follow">
    <id column="fid" jdbcType="INTEGER" property="fid" />
    <result column="aid" jdbcType="INTEGER" property="aid" />
    <result column="follow_aid" jdbcType="INTEGER" property="followAid" />
    <result column="ftime" jdbcType="TIMESTAMP" property="ftime" />
    <result column="mutual_concern" jdbcType="BIT" property="mutualConcern" />
  </resultMap>
  <sql id="Base_Column_List">
    fid, aid, follow_aid, ftime, mutual_concern
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from follow
    where fid = #{fid,jdbcType=INTEGER}
  </select>
  <select id="follow" parameterType="int" resultType="cn.edu.nuc.weibo.dto.Follow">
  	SELECT
		a.fid,
		a.aid 'account.aid',
		a.follow_aid,
		a.nick_name 'account.nickName',
		a.pic 'account.pic',
		a.fans 'account.fans',
		a.follow 'account.follow',
		a.weibo 'account.weibo', 
		ifnull(b.aid, - 1) flag
	FROM
		(
			SELECT
				f.fid,
				f.aid,
				f.follow_aid,
				a.nick_name,
				a.pic,
				a.fans,
				a.follow,
				a.weibo
			FROM
				follow f
			LEFT JOIN account a ON f.follow_aid = a.aid
			WHERE
				f.aid = #{value}
			ORDER BY
				f.ftime DESC
		) a
	LEFT JOIN (
		SELECT
			f.fid,
			f.follow_aid,
			a.nick_name,
			a.aid
		FROM
			follow f
		LEFT JOIN account a ON f.aid = a.aid
		WHERE
			f.follow_aid = #{value}
	) b ON a.follow_aid = b.aid
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from follow
    where fid = #{fid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.nuc.weibo.entity.Follow">
    insert into follow (fid, aid, follow_aid, 
      ftime, mutual_concern)
    values (#{fid,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER}, #{followAid,jdbcType=INTEGER}, 
      #{ftime,jdbcType=TIMESTAMP}, #{mutualConcern,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nuc.weibo.entity.Follow">
    insert into follow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        fid,
      </if>
      <if test="aid != null">
        aid,
      </if>
      <if test="followAid != null">
        follow_aid,
      </if>
      <if test="ftime != null">
        ftime,
      </if>
      <if test="mutualConcern != null">
        mutual_concern,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="followAid != null">
        #{followAid,jdbcType=INTEGER},
      </if>
      <if test="ftime != null">
        #{ftime,jdbcType=TIMESTAMP},
      </if>
      <if test="mutualConcern != null">
        #{mutualConcern,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nuc.weibo.entity.Follow">
    update follow
    <set>
      <if test="aid != null">
        aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="followAid != null">
        follow_aid = #{followAid,jdbcType=INTEGER},
      </if>
      <if test="ftime != null">
        ftime = #{ftime,jdbcType=TIMESTAMP},
      </if>
      <if test="mutualConcern != null">
        mutual_concern = #{mutualConcern,jdbcType=BIT},
      </if>
    </set>
    where fid = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nuc.weibo.entity.Follow">
    update follow
    set aid = #{aid,jdbcType=INTEGER},
      follow_aid = #{followAid,jdbcType=INTEGER},
      ftime = #{ftime,jdbcType=TIMESTAMP},
      mutual_concern = #{mutualConcern,jdbcType=BIT}
    where fid = #{fid,jdbcType=INTEGER}
  </update>
</mapper>